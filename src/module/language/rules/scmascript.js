export default {
    comment:[{
        type:'comment',
        match:/\/\*[^\/]*\*\/|\/\/.+\n?/g
    }],
    string:[{
        type:'string',
        match:/\".+?\"|\'.+?\'/g
    },{
        type:'string',
        match:/\`[\s\S]+?\`/g,
        rules:[{
            type:'variable',
            match:/\${.+?}/g
        }]
    }],
    parameter:[{
        type:'parameter',
        match:/(?<=\([$\w\s=,]*[\s,]*\s?)[$\w\s=]+(?=\s?[\s,]*[$\w\s=,]*\))/g,
        rules:[{
            type:'literal',
            match:/(?<=:\s*\|?\s*)\w+(?=[\s,:;{\)])/g
        }]
    }],
    regex:[{
        type:'regex',
        match:/\/.+?\/[gimu\s]/g
    }],
    literal:[{
        type:'literal',
        match:/(?<=\W)true|false|null|undefined(?=\W)/g
    }],
    keyword:[{
        type:'keyword',
        match:/(^|(?<=\W))(return|void|continue|for|if|else|switch|do|while|default|throw|delete|try|catch|finally|function|with|debugger|class|enum|extends|export|import|impelements|new|typeof|var|let|const|public|yield|interface|package|static|async|await|instanceof)(?=\W)/g,
    },{
        type:'keyword',
        match:/(?<=for\s*\(.+?\s)(in|of)(?=\s.+?\))/g
    },{
        type:'keyword',
        match:/(?<=\s)(get|set)(?=\s+\w+\(.*?\))/g
    },{
        type:'keyword',
        match:/(?<=import\s*.+?\s)(from|as|assert|with)(?=\s.+?)/g
    }],
    buildin:[{
        type:'buildin',
        match:/(^|(?<=\W))(Object|Function|Array|Stirng|Boolean|Number|Date|RegExp|Buffer|ArrayBuffer|Int8Array|Uint8ClampedArray|Int16Array|Int32Array|Float32Array|Float64Array|Uint32Array|BigUint64Array|Blob|Math|Error|EvalError|RangeError|ReferenceError|SyntaxError|TypeError|URIError|JSON|Reflect|Proxy|Worker|WebSocket|EventSource|FileReader|FormData|Set|Map|WeakSet|WeakMap|URL|Infinity|Symbol|BigInt|NaN)(?=\W)/g
    }],
    variable:[{
        type:'variable',
        match:/(^|(?<=\W))this|parent|self|globalThis|super|navigator|console(?=\.)/g
    }],
    operator:[{
        type:'operator',
        match:/[\+\-\*\/%=<>]/g
    }],
    punctuation:[{
        type:'punctuation',
        match:/[\(\)\{\}\[\]\.;,:#]/g
    }],
    function:[{
        type:'function',
        match:/(?<=[^\w])[\w$]+?(?=(\s*\:\s*function)?\s*\()/g
    }],
    class:[{
        type:'class',
        match:/(?<=class\s+)[\w$]+?(?=\s)/g
    }],
    property:[{
        type:'property',
        match:/(?<=[\s])#?[\w$]+(?=[:])|(?<=[\.])#?[\w$]+(?=[=;\s\)])/g
    }],
    number:[{
        type:'number',
        match:/\-?\d+e?(_\d+)*(\.\d)?(_\d+)*/g
    }]
};
